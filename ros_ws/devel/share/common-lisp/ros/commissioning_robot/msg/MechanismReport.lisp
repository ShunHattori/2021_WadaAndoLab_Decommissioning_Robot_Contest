; Auto-generated. Do not edit!


(cl:in-package commissioning_robot-msg)


;//! \htmlinclude MechanismReport.msg.html

(cl:defclass <MechanismReport> (roslisp-msg-protocol:ros-message)
  ((running_phase
    :reader running_phase
    :initarg :running_phase
    :type cl:fixnum
    :initform 0)
   (running_mode
    :reader running_mode
    :initarg :running_mode
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (state_limit
    :reader state_limit
    :initarg :state_limit
    :type (cl:vector cl:fixnum)
   :initform (cl:make-array 0 :element-type 'cl:fixnum :initial-element 0))
   (state_pulse
    :reader state_pulse
    :initarg :state_pulse
    :type (cl:vector cl:integer)
   :initform (cl:make-array 0 :element-type 'cl:integer :initial-element 0))
   (reference
    :reader reference
    :initarg :reference
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0))
   (current
    :reader current
    :initarg :current
    :type (cl:vector cl:float)
   :initform (cl:make-array 0 :element-type 'cl:float :initial-element 0.0)))
)

(cl:defclass MechanismReport (<MechanismReport>)
  ())

(cl:defmethod cl:initialize-instance :after ((m <MechanismReport>) cl:&rest args)
  (cl:declare (cl:ignorable args))
  (cl:unless (cl:typep m 'MechanismReport)
    (roslisp-msg-protocol:msg-deprecation-warning "using old message class name commissioning_robot-msg:<MechanismReport> is deprecated: use commissioning_robot-msg:MechanismReport instead.")))

(cl:ensure-generic-function 'running_phase-val :lambda-list '(m))
(cl:defmethod running_phase-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:running_phase-val is deprecated.  Use commissioning_robot-msg:running_phase instead.")
  (running_phase m))

(cl:ensure-generic-function 'running_mode-val :lambda-list '(m))
(cl:defmethod running_mode-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:running_mode-val is deprecated.  Use commissioning_robot-msg:running_mode instead.")
  (running_mode m))

(cl:ensure-generic-function 'state_limit-val :lambda-list '(m))
(cl:defmethod state_limit-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:state_limit-val is deprecated.  Use commissioning_robot-msg:state_limit instead.")
  (state_limit m))

(cl:ensure-generic-function 'state_pulse-val :lambda-list '(m))
(cl:defmethod state_pulse-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:state_pulse-val is deprecated.  Use commissioning_robot-msg:state_pulse instead.")
  (state_pulse m))

(cl:ensure-generic-function 'reference-val :lambda-list '(m))
(cl:defmethod reference-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:reference-val is deprecated.  Use commissioning_robot-msg:reference instead.")
  (reference m))

(cl:ensure-generic-function 'current-val :lambda-list '(m))
(cl:defmethod current-val ((m <MechanismReport>))
  (roslisp-msg-protocol:msg-deprecation-warning "Using old-style slot reader commissioning_robot-msg:current-val is deprecated.  Use commissioning_robot-msg:current instead.")
  (current m))
(cl:defmethod roslisp-msg-protocol:serialize ((msg <MechanismReport>) ostream)
  "Serializes a message object of type '<MechanismReport>"
  (cl:write-byte (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'running_phase)) ostream)
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'running_mode))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:write-byte (cl:ldb (cl:byte 8 0) ele) ostream))
   (cl:slot-value msg 'running_mode))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'state_limit))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:write-byte (cl:ldb (cl:byte 8 0) ele) ostream))
   (cl:slot-value msg 'state_limit))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'state_pulse))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let* ((signed ele) (unsigned (cl:if (cl:< signed 0) (cl:+ signed 18446744073709551616) signed)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) unsigned) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) unsigned) ostream)
    ))
   (cl:slot-value msg 'state_pulse))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'reference))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'reference))
  (cl:let ((__ros_arr_len (cl:length (cl:slot-value msg 'current))))
    (cl:write-byte (cl:ldb (cl:byte 8 0) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) __ros_arr_len) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) __ros_arr_len) ostream))
  (cl:map cl:nil #'(cl:lambda (ele) (cl:let ((bits (roslisp-utils:encode-double-float-bits ele)))
    (cl:write-byte (cl:ldb (cl:byte 8 0) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 8) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 16) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 24) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 32) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 40) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 48) bits) ostream)
    (cl:write-byte (cl:ldb (cl:byte 8 56) bits) ostream)))
   (cl:slot-value msg 'current))
)
(cl:defmethod roslisp-msg-protocol:deserialize ((msg <MechanismReport>) istream)
  "Deserializes a message object of type '<MechanismReport>"
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:slot-value msg 'running_phase)) (cl:read-byte istream))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'running_mode) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'running_mode)))
    (cl:dotimes (i __ros_arr_len)
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:aref vals i)) (cl:read-byte istream)))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'state_limit) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'state_limit)))
    (cl:dotimes (i __ros_arr_len)
    (cl:setf (cl:ldb (cl:byte 8 0) (cl:aref vals i)) (cl:read-byte istream)))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'state_pulse) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'state_pulse)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((unsigned 0))
      (cl:setf (cl:ldb (cl:byte 8 0) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) unsigned) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) unsigned) (cl:read-byte istream))
      (cl:setf (cl:aref vals i) (cl:if (cl:< unsigned 9223372036854775808) unsigned (cl:- unsigned 18446744073709551616)))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'reference) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'reference)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  (cl:let ((__ros_arr_len 0))
    (cl:setf (cl:ldb (cl:byte 8 0) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 8) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 16) __ros_arr_len) (cl:read-byte istream))
    (cl:setf (cl:ldb (cl:byte 8 24) __ros_arr_len) (cl:read-byte istream))
  (cl:setf (cl:slot-value msg 'current) (cl:make-array __ros_arr_len))
  (cl:let ((vals (cl:slot-value msg 'current)))
    (cl:dotimes (i __ros_arr_len)
    (cl:let ((bits 0))
      (cl:setf (cl:ldb (cl:byte 8 0) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 8) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 16) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 24) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 32) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 40) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 48) bits) (cl:read-byte istream))
      (cl:setf (cl:ldb (cl:byte 8 56) bits) (cl:read-byte istream))
    (cl:setf (cl:aref vals i) (roslisp-utils:decode-double-float-bits bits))))))
  msg
)
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql '<MechanismReport>)))
  "Returns string type for a message object of type '<MechanismReport>"
  "commissioning_robot/MechanismReport")
(cl:defmethod roslisp-msg-protocol:ros-datatype ((msg (cl:eql 'MechanismReport)))
  "Returns string type for a message object of type 'MechanismReport"
  "commissioning_robot/MechanismReport")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql '<MechanismReport>)))
  "Returns md5sum for a message object of type '<MechanismReport>"
  "4efe817f8f990d484fcf48fdff687678")
(cl:defmethod roslisp-msg-protocol:md5sum ((type (cl:eql 'MechanismReport)))
  "Returns md5sum for a message object of type 'MechanismReport"
  "4efe817f8f990d484fcf48fdff687678")
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql '<MechanismReport>)))
  "Returns full string definition for message of type '<MechanismReport>"
  (cl:format cl:nil "uint8 running_phase~%uint8[] running_mode~%uint8[] state_limit~%int64[] state_pulse~%float64[] reference~%float64[] current~%~%~%"))
(cl:defmethod roslisp-msg-protocol:message-definition ((type (cl:eql 'MechanismReport)))
  "Returns full string definition for message of type 'MechanismReport"
  (cl:format cl:nil "uint8 running_phase~%uint8[] running_mode~%uint8[] state_limit~%int64[] state_pulse~%float64[] reference~%float64[] current~%~%~%"))
(cl:defmethod roslisp-msg-protocol:serialization-length ((msg <MechanismReport>))
  (cl:+ 0
     1
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'running_mode) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 1)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'state_limit) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 1)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'state_pulse) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'reference) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
     4 (cl:reduce #'cl:+ (cl:slot-value msg 'current) :key #'(cl:lambda (ele) (cl:declare (cl:ignorable ele)) (cl:+ 8)))
))
(cl:defmethod roslisp-msg-protocol:ros-message-to-list ((msg <MechanismReport>))
  "Converts a ROS message object to a list"
  (cl:list 'MechanismReport
    (cl:cons ':running_phase (running_phase msg))
    (cl:cons ':running_mode (running_mode msg))
    (cl:cons ':state_limit (state_limit msg))
    (cl:cons ':state_pulse (state_pulse msg))
    (cl:cons ':reference (reference msg))
    (cl:cons ':current (current msg))
))
